[{"model": "LeNet", "input": "Bounds for input 0: [ -0.3284228772, 0.6798577687 ] Bounds for input 1: [ -0.5000000551, 0.5000000551 ] Bounds for input 2: [ -0.5000000551, 0.5000000551 ] Bounds for input 3: [ -0.5000000000, 0.5000000000 ] Bounds for input 4: [ -0.5000000000, 0.5000000000 ]", "auxiliary_variables": 305, "verified_output": "Bounds for output 0: [ 3.9911256459, 4214.5845002596 ]. Normalized: [ 1500.00, 1576051.06 ] Bounds for output 1: [ -2549.6885949355, 5503.3589419657 ]. Normalized: [ -953448.33, 2057988.15 ] Bounds for output 2: [ -1771.7910769508, 5593.5920336552 ]. Normalized: [ -662553.61, 2091730.81 ] Bounds for output 3: [ -4255.7282086107, 6143.5437747654 ]. Normalized: [ -1591421.70, 2297385.22 ] Bounds for output 4: [ -2756.8926326906, 6120.7919242378 ]. Normalized: [ -1030932.26, 2288877.17 ]", "Verified": 0, "Falsified": 0, "Timeout": 45, "Time": "45m1s"},
{"model": "LeNet", "input": "Bounds for input 0: [ -0.3284228772, 0.6798577687 ] Bounds for input 1: [ -0.5000000551, 0.5000000551 ] Bounds for input 2: [ -0.5000000551, 0.5000000551 ] Bounds for input 3: [ -0.5000000000, 0.5000000000 ] Bounds for input 4: [ -0.5000000000, 0.5000000000 ]", "auxiliary_variables": 305, "verified_output": "Bounds for output 0: [ -3467.5135641509, 8799.2781320352 ]. Normalized: [ -1296668.90, 3290496.87 ] Bounds for output 1: [ -3825.7682669633, 6805.7033172074 ]. Normalized: [ -1430638.22, 2544999.73 ] Bounds for output 2: [ -3230.8298164867, 7506.3613228714 ]. Normalized: [ -1208161.03, 2807010.74 ] Bounds for output 3: [ -4585.2349418739, 8582.0441604304 ]. Normalized: [ -1714640.72, 3209262.25 ] Bounds for output 4: [ -4971.6448713887, 9870.1008197533 ]. Normalized: [ -1859138.68, 3690930.93 ]", "Verified": 0, "Falsified": 8, "Timeout": 28, "Time": "32m0s"},
{"model": "LeNet", "input": "Bounds for input 0: [ 0.00, 60760.00 ]. Normalized: [ -0.3284228772, 0.6798577687 ] Bounds for input 1: [ -3.14, 3.14 ]. Normalized: [ -0.4999998960, 0.4999998960 ] Bounds for input 2: [ -3.14, 3.14 ]. Normalized: [ -0.4999998960, 0.4999998960 ] Bounds for input 3: [ 100.00, 1200.00 ]. Normalized: [ -0.5000000000, 0.5000000000 ] Bounds for input 4: [ 0.00, 1200.00 ]. Normalized: [ -0.5000000000, 0.5000000000 ]", "auxiliary_variables": 305, "verified_output": "Bounds for output 0: [ -1803.8345923854, 5029.0354268089 ]. Normalized: [ -674536.28, 1880614.91 ] Bounds for output 1: [ -3043.3998550868, 6567.0097460186 ]. Normalized: [ -1138071.61, 2455740.29 ] Bounds for output 2: [ -2113.1099901879, 6674.0151061839 ]. Normalized: [ -790189.79, 2495754.93 ] Bounds for output 3: [ -5078.9587031711, 7326.4900565278 ]. Normalized: [ -1899268.68, 2739747.89 ] Bounds for output 4: [ -3284.7163119817, 7301.7213274716 ]. Normalized: [ -1228311.88, 2730485.63 ]", "Verified": 0, "Falsified": 0, "Timeout": 4, "Time": "4m0s"},
{"model": "LeNet", "input": "Bounds for input 0: [ 1500.00, 1800.00 ]. Normalized: [ -0.3035311561, -0.2985528119 ] Bounds for input 1: [ -0.06, 0.06 ]. Normalized: [ -0.0095492966, 0.0095492966 ] Bounds for input 2: [ 3.10, 3.14 ]. Normalized: [ 0.4933803236, 0.5000000551 ] Bounds for input 3: [ 980.00, 1200.00 ]. Normalized: [ 0.3000000000, 0.5000000000 ] Bounds for input 4: [ 960.00, 1200.00 ]. Normalized: [ 0.3000000000, 0.5000000000 ]", "auxiliary_variables": 305, "verified_output": "Bounds for output 0: [ -129.1243715126, 359.0964871587 ]. Normalized: [ -48278.53, 134291.62 ] Bounds for output 1: [ -217.3383405791, 469.0015915799 ]. Normalized: [ -81266.14, 175390.63 ] Bounds for output 2: [ -151.0987719142, 476.3710761732 ]. Normalized: [ -56495.85, 178146.44 ] Bounds for output 3: [ -362.8962234052, 523.4299688934 ]. Normalized: [ -135697.49, 195744.11 ] Bounds for output 4: [ -235.2439988905, 521.0271164194 ]. Normalized: [ -87961.96, 194845.57 ]", "Verified": 8, "Falsified": 0, "Timeout": 34, "Time": "38m39s"},
{"model": "LeNet", "input": "Bounds for input 0: [ 1500.00, 1800.00 ]. Normalized: [ -0.3035311561, -0.2985528119 ] Bounds for input 1: [ -0.06, 0.06 ]. Normalized: [ -0.0095492966, 0.0095492966 ] Bounds for input 2: [ 0.00, 0.00 ]. Normalized: [ 0.0000000000, 0.0000000000 ] Bounds for input 3: [ 1000.00, 1200.00 ]. Normalized: [ 0.3181818182, 0.5000000000 ] Bounds for input 4: [ 700.00, 800.00 ]. Normalized: [ 0.0833333333, 0.1666666667 ]", "auxiliary_variables": 305, "verified_output": "Bounds for output 0: [ -235.7853216029, 786.7445689635 ]. Normalized: [ -88164.38, 294210.59 ] Bounds for output 1: [ -209.5487435666, 653.2836763091 ]. Normalized: [ -78353.22, 244302.90 ] Bounds for output 2: [ -223.5751471405, 736.8096975044 ]. Normalized: [ -83598.39, 275537.45 ] Bounds for output 3: [ -314.4235133154, 637.7716315167 ]. Normalized: [ -117571.13, 238502.17 ] Bounds for output 4: [ -352.5393196786, 843.6832248224 ]. Normalized: [ -131824.53, 315502.79 ]", "Verified": 0, "Falsified": 32, "Timeout": 8, "Time": "8m7s"}
]